name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-lint-and-test:
    name: Frontend Lint and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: '10.8.1'

      - name: Get pnpm store directory
        id: pnpm-store
        shell: bash
        run: |
          echo "store_path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store.outputs.store_path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Lint
        working-directory: ./frontend
        run: pnpm lint

      - name: Format Check
        working-directory: ./frontend
        run: pnpm biome check --no-errors-on-unmatched

      - name: Run Tests
        working-directory: ./frontend
        run: pnpm test:run

  backend-lint-and-test:
    name: Backend Lint and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Setup virtual environment
        working-directory: ./backend
        run: |
          uv venv
          echo "source .venv/bin/activate" >> $GITHUB_ENV

      - name: Install dependencies
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Lint with ruff
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          ruff check src tests

      - name: Format check with ruff
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          ruff format --check src tests

      - name: Type check with pyright
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          pyright

      - name: Run tests
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          pytest
