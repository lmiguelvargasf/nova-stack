name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  POSTGRES_DB: test_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  POSTGRES_TEST_DB: test_db
  PICCOLO_CONF: backend.config.piccolo_test

jobs:
  frontend-lint-and-test:
    name: Frontend Lint and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: '10.8.1'

      - name: Get pnpm store directory
        id: pnpm-store
        shell: bash
        run: |
          echo "store_path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store.outputs.store_path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Install Playwright Browsers
        working-directory: ./frontend
        run: pnpm exec playwright install --with-deps chromium

      - name: Backend Dependencies
        uses: ./.github/actions/backend-setup

      - name: Generate GraphQL Schema
        working-directory: ./backend
        run: |
          # Generate GraphQL schema using Strawberry
          mkdir -p ../frontend/schema
          uv run python -c "
          from backend.schema import schema
          from pathlib import Path

          # Write SDL schema to file
          schema_sdl = str(schema)
          Path('../frontend/schema/schema.graphql').write_text(schema_sdl)
          print('Schema generated successfully!')
          "

      - name: Generate GraphQL Code
        working-directory: ./frontend
        run: |
          # Create a temporary codegen config file based on the existing one
          cp codegen.yml codegen.ci.yml
          # Replace the schema URL with the local file path
          sed -i 's|schema:.*|schema: ./schema/schema.graphql|' codegen.ci.yml
          # Run codegen with the temporary config
          pnpm graphql-codegen --config codegen.ci.yml

      - name: Lint
        working-directory: ./frontend
        run: pnpm lint

      - name: Format Check
        working-directory: ./frontend
        run: pnpm biome check --no-errors-on-unmatched

      - name: Run Tests
        working-directory: ./frontend
        run: pnpm test:run

  backend-lint-and-test:
    name: Backend Lint and Test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Backend Dependencies
        uses: ./.github/actions/backend-setup

      - name: Lint with ruff
        run: |
          uv run ruff check --force-exclude --fix

      - name: Format check with ruff
        run: |
          uv run ruff format --force-exclude

      - name: Type check with pyright
        run: |
          uv run pyright

      - name: Run tests
        run: |
            uv run pytest --no-cov
